services:
  zookeeper:
    restart: unless-stopped
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - loki

  kafka_broker:
    restart: unless-stopped
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.0.90:9092,PLAINTEXT_INTERNAL://kafka_broker:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - loki
    healthcheck:
      test: nc -z 127.0.0.1 9092 || exit -1
      interval: 10s
      retries: 5
      start_period: 8s

  loki:
    restart: unless-stopped
    image: grafana/loki:latest
    volumes:
      - './loki-config.yaml:/etc/loki/loki.yaml'
      - './loki-data/:/loki'
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki.yaml
    networks:
      - loki
    user: "1000:1000"

  grafana:    
    restart: unless-stopped
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    volumes:
      - './grafana/:/var/lib/grafana'
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki
    user: "1000:1000"
  
  alloy:
    restart: unless-stopped
    image: grafana/alloy:latest
    depends_on:
      kafka_broker:
        condition: service_healthy
    ports:
      - "9901:9901"
    volumes:
      - ./config.alloy:/etc/alloy/config.alloy
    command: ["run", "--server.http.listen-addr=0.0.0.0:9901", "--storage.path=/var/lib/alloy/data", "/etc/alloy/config.alloy"]
    networks:
      - loki

  prometheus:
    restart: unless-stopped
    image: prom/prometheus
    #ports:
    #  - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - loki

networks:
  loki:
